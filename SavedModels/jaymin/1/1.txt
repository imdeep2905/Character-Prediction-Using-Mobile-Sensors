def train_model_V1(dataset, epochs):  
    model = Sequential([
        LSTM(100, batch_input_shape = (1,None, 12),stateful=True),
        Dense(64, activation = "relu"),
        Dense(36, activation = "softmax")
    ])
    loss_fn = tf.keras.losses.CategoricalCrossentropy()
    optimizer = tf.keras.optimizers.Adam()
    model.compile(loss = loss_fn, optimizer = optimizer, metrics = ["accuracy"])
    print(model.summary())
    for ep in range(epochs):
        avgacc = 0.
        for ds in dataset:
            result = model.fit(ds)
            with open('log.csv', mode = 'a') as f:
                f.write(f"{ep},{result.history['loss'][0]},{result.history['accuracy'][0]}\n")
                avgacc += result.history['accuracy'][0]
        print()
        print(f'Completed epoch. {ep} ')
        model.save('1.h5')
        print(f'Current model saved with Acc = {avgacc / len(dataset)}')
        print()
        
    model.save('V1_MODEL.h5')